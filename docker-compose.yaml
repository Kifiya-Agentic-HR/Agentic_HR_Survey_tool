
services:
  interview_frontend:
    build:
      context: ./interview_ai/frontend
      args:
        NEXT_PUBLIC_API_BASE_URL: "http://${HOST}:${CMS_BACKEND_PORT}/api/v1"
        NEXT_PUBLIC_INTERVIEW_BACKEND: "http://${HOST}:${CMS_BACKEND_PORT}"
    container_name: InterviewFrontend
    ports:
      - "${INTERVIEW_FRONTEND_PORT}:3000"
    depends_on:
      - interview_backend
    env_file: .env
    environment:
      NEXT_PUBLIC_API_BASE_URL: "http://${HOST}:${CMS_BACKEND_PORT}/api/v1"
      NEXT_PUBLIC_INTERVIEW_BACKEND: "http://${HOST}:${CMS_BACKEND_PORT}"
    networks:
      - app_network

  interview_backend:
    build: ./interview_ai/backend
    container_name: InterviewBackend
    depends_on:
      - mongod
      - redis
      - notification
    env_file: .env
    ports:
      - "8030:8030"
    environment:
      port: 8030
      MONGO_URI: "mongodb://mongod:27017/hr_db"
      MONGO_DB: "hr_db"
      REDIS_URI: "redis://redis:6379"
      GOOGLE_API_KEY: "${GOOGLE_API_KEY}"
      LITELLM_MODEL: "${LITELLM_MODEL}"
      NOTIFICATION_SERVICE_URL: "http://notification:${NOTIFICATION_PORT}/api/v1/"
      FRONTEND_BASE_URL: "http://${HOST}:${INTERVIEW_FRONTEND_PORT}"
      WEAVIATE_HOST: "weaviate"
      WEAVIATE_PORT: 8081
    networks:
      - app_network
    volumes:
      - shared_volume:/shared_volume

  mongod:
    image: mongo:latest
    command: mongod --quiet --logpath /dev/null
    container_name: Mongod
    ports:
      - "27037:27017"
    restart: always
    volumes:
      - ./data/mongo:/data/db
    environment:
      MONGO_INITDB_DATABASE: hr_db
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: Redis
    restart: always
    ports:
      - "6377:6377"
    networks:
      - app_network
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"
    volumes:
      - redis-data:/data

  notification:
    build:
      context: ./notification
      dockerfile: Dockerfile
    ports:
      - "7788:8000"
    env_file: .env
    environment:
      PORT: 8000
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      SMTP_FROM: ${SMTP_FROM}
      REDIS_URI: "redis://redis:6379/0"
    networks:
      - app_network
    depends_on:
      - redis


networks:
  app_network:
    driver: bridge

volumes:
  shared_volume:
  redis-data:
